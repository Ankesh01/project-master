# Generated by Django 2.2 on 2020-09-09 18:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('industrial_project_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CityName', models.CharField(max_length=50, unique=True)),
                ('CreatedDate', models.DateTimeField(auto_now_add=True)),
                ('UpdateDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CollegeName', models.CharField(max_length=250)),
                ('CollegeAddress', models.TextField(max_length=500)),
                ('CollegeEmail', models.EmailField(max_length=250, unique=True)),
                ('CollegePhoneNo', models.IntegerField(unique=True)),
                ('Password', models.CharField(max_length=20)),
                ('CreatedDate', models.DateTimeField(auto_now_add=True)),
                ('UpdateDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CourseName', models.CharField(max_length=250, unique=True)),
                ('UniqueId', models.CharField(max_length=50, unique=True)),
                ('CreatedDate', models.DateTimeField(auto_now_add=True)),
                ('UpdateDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='NonTechnical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NonTechnicalName', models.CharField(max_length=250, unique=True)),
                ('NonTechnicalUniqueId', models.CharField(max_length=250, unique=True)),
                ('CreatedDate', models.DateTimeField(auto_now_add=True)),
                ('UpdateDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StateName', models.CharField(max_length=50, unique=True)),
                ('CreatedDate', models.DateTimeField(auto_now_add=True)),
                ('UpdateDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Technical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TechnicalName', models.CharField(max_length=250, unique=True)),
                ('TechnicalUniqueId', models.CharField(max_length=250, unique=True)),
                ('CreatedDate', models.DateTimeField(auto_now_add=True)),
                ('UpdateDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User_Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FirstName', models.CharField(max_length=50)),
                ('SurName', models.CharField(max_length=50)),
                ('School_info', models.CharField(blank=True, max_length=50)),
                ('Email', models.EmailField(max_length=254, unique=True)),
                ('PhoneNo', models.IntegerField(unique=True)),
                ('Age', models.IntegerField()),
                ('BirthDate', models.DateField()),
                ('CreatedDate', models.DateField()),
                ('UpdateDate', models.DateField()),
                ('Job_Status', models.BooleanField(default=0)),
                ('City_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_cityName', to='industrial_project_app.City')),
                ('College_info', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='College_information', to='industrial_project_app.College')),
                ('NonTechnicalField', models.ForeignKey(blank=True, on_delete=None, to='industrial_project_app.NonTechnical')),
                ('State_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='User_stateName', to='industrial_project_app.State')),
                ('TechnicalField', models.ForeignKey(blank=True, on_delete=None, to='industrial_project_app.Technical')),
                ('UserName', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UnLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UnLikeCount', models.IntegerField(default=0)),
                ('Post', models.ForeignKey(blank=True, on_delete=None, to='industrial_project_app.post')),
                ('User', models.ForeignKey(blank=True, on_delete=None, to='industrial_project_app.User_Table')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SchoolName', models.CharField(max_length=250)),
                ('SchoolAddress', models.TextField(max_length=500)),
                ('SchoolEmail', models.EmailField(max_length=250, unique=True)),
                ('SchoolPhoneNo', models.IntegerField(unique=True)),
                ('Password', models.CharField(max_length=20)),
                ('CreatedDate', models.DateTimeField(auto_now_add=True)),
                ('UpdateDate', models.DateTimeField(auto_now_add=True)),
                ('Courses_Provide', models.ManyToManyField(to='industrial_project_app.Courses')),
                ('State_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='School_State', to='industrial_project_app.State')),
                ('city_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='College_City', to='industrial_project_app.State')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LikeCount', models.IntegerField(default=0)),
                ('Post', models.ForeignKey(blank=True, on_delete=None, to='industrial_project_app.post')),
                ('User', models.ForeignKey(blank=True, on_delete=None, to='industrial_project_app.User_Table')),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.BooleanField(default=0)),
                ('FromUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Request_Sent', to='industrial_project_app.User_Table')),
                ('ToUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendrequests', to='industrial_project_app.User_Table')),
            ],
        ),
        migrations.CreateModel(
            name='Followig_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Following', models.ManyToManyField(blank=True, to='industrial_project_app.User_Table')),
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Followings', to='industrial_project_app.User_Table')),
            ],
        ),
        migrations.CreateModel(
            name='Followers_User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Followers', models.ManyToManyField(blank=True, to='industrial_project_app.User_Table')),
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Followers', to='industrial_project_app.User_Table')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Post_comment', models.TextField(max_length=250)),
                ('CreatedDate', models.DateTimeField(auto_now_add=True)),
                ('UpdateDate', models.DateTimeField(auto_now_add=True)),
                ('Post', models.ForeignKey(blank=True, on_delete=None, to='industrial_project_app.post')),
                ('User', models.ForeignKey(blank=True, on_delete=None, to='industrial_project_app.User_Table')),
            ],
        ),
        migrations.AddField(
            model_name='college',
            name='Courses_Provide',
            field=models.ManyToManyField(to='industrial_project_app.Courses'),
        ),
        migrations.AddField(
            model_name='college',
            name='State_Name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='College_state', to='industrial_project_app.State'),
        ),
        migrations.AddField(
            model_name='college',
            name='city_Name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='City', to='industrial_project_app.State'),
        ),
        migrations.AddField(
            model_name='city',
            name='CityState',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='industrial_project_app.State'),
        ),
    ]
